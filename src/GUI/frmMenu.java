/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.*;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Administrador
 */
public class frmMenu extends javax.swing.JFrame implements ActionListener
{

    //cria barra de menu                             
    private JMenuBar jmPrincipal = new JMenuBar();

    //cria menu "cadastro" na barra de menu
    private JMenu jmOperacao = new JMenu("Operação");
    private JMenu jmFaturamento = new JMenu("Faturamento");
    private JMenu jmBancoDeDados = new JMenu("Banco de Dados");

    //cria item "cliente" dentro do menu "cadastro"
    private JMenuItem jmPedido = new JMenuItem("Pedido");
    private JMenuItem jmReceberPedidosPendentes = new JMenuItem("Receber Pedidos Pendentes");
    private JMenuItem jmRealizarEntrega = new JMenuItem("Realizar Entrega");
    private JMenuItem jmCadCliente = new JMenuItem("Cadastrar Cliente");
    private JMenuItem jmCadProduto = new JMenuItem("Cadastrar Produto");
    private JMenuItem jmEfetuarPagamento = new JMenuItem("Efetuar Pagamento");

    //cria objeto jdPane, do tipo JDesktopPane. Ele vai dentro d JFrame
    public JDesktopPane jdPane = new JDesktopPane();

    static ctlBase ctlTela = null;
    ctlBase ctlCadCliente, ctlPedido, ctlCadProduto, ctlEfetuarPagamento;
    ctlBase ctlReceberPedidosPendentes, ctlRealizarEntrega;

    /**
     * Creates new form frmMenuTeste
     */
    public frmMenu()
    {
        //"pegue o conteúdo do painel" - adiciona o jDesktopPane ao JFrame (janela principal
        getContentPane().add(jdPane);

        //adiciona os menus à barra de menus (jmPrincipal)
        jmPrincipal.add(jmOperacao);
        jmPrincipal.add(jmFaturamento);
        jmPrincipal.add(jmBancoDeDados);

        //adiciona os itens aos respectivos menus
        jmOperacao.add(jmPedido);
        jmOperacao.add(jmReceberPedidosPendentes);
        jmOperacao.add(jmRealizarEntrega);
        jmFaturamento.add(jmEfetuarPagamento);
        jmBancoDeDados.add(jmCadCliente);
        jmBancoDeDados.add(jmCadProduto);

        //"ajusta" a barra de menu dentro da janela principal
        setJMenuBar(jmPrincipal);

        //adiciona actionlistener aos itens do menu para que os eventos sejam tratados
        jmPedido.addActionListener(this);
        jmReceberPedidosPendentes.addActionListener(this);
        jmRealizarEntrega.addActionListener(this);
        jmEfetuarPagamento.addActionListener(this);
        jmCadCliente.addActionListener(this);
        jmCadProduto.addActionListener(this);

        setSize(800, 600);
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);
        //initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(frmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(frmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(frmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(frmMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new frmMenu().setVisible(true);
            }
        });
    }

    public void verificaTelaAberta(String nomeTela)
    {
        if (ctlTela == null)
        {
            switch (nomeTela)
            {
                case "Pedido": ctlTela = new ctlPedido(nomeTela,this); break;
                case "Receber Pedidos Pendentes": ctlTela = new ctlReceberPedidosPendentes(nomeTela,this); break;
                case "Realizar Entrega": ctlTela = new ctlRealizarEntrega(nomeTela,this); break;
                case "Efetuar Pagamento": ctlTela = new ctlEfetuarPagamento(nomeTela,this); break;
                case "Cadastrar Cliente": ctlTela = new ctlCadCliente(nomeTela,this); break;
                case "Cadastrar Produto": ctlTela = new ctlCadProduto(nomeTela,this); break;
            }
            try
            {
                ctlTela.setMaximum(true);
                jdPane.moveToFront(ctlTela);
            } catch (PropertyVetoException ex)
            {
                Logger.getLogger(frmMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void actionPerformed(ActionEvent evt)
    {
        verificaTelaAberta(evt.getActionCommand());
    }

    public static void setCtlTela(ctlBase ctlTela)
    {
        frmMenu.ctlTela = ctlTela;
    }

}
